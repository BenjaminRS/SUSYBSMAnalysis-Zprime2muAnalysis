#!/bin/tcsh
#BSUB -q 2nw
#BSUB -J Zssm3000
#BSUB -o /afs/cern.ch/user/t/tucker/scratch0/Zp2mu_GEN_SIM_%J.lis

# to do:
# change job name
# change SAMPLE
# check OUTDIR
# check RNG seed
# change PYTHIA settings
# enable simulation or no

echo  --------------------------
echo $0 batch job started at `date`
echo   GEN_SIM for CMSSW 1_6_7
echo  --------------------------

setenv CMSSW_VERS CMSSW_1_6_7
setenv WRITE_TO_CASTOR true
setenv NEVENTS 1000

setenv MODEL Zssm
#setenv MODEL Zpsi

# setenv SAMPLE dy_above200;  setenv FIRSTPU      0
# setenv SAMPLE dy_above400;  setenv FIRSTPU  25000
# setenv SAMPLE dy_above1000; setenv FIRSTPU  50000
# setenv SAMPLE dy_above1500; setenv FIRSTPU  75000
# setenv SAMPLE dy_above2000; setenv FIRSTPU 100000
# setenv SAMPLE dy_above3000; setenv FIRSTPU 125000

# setenv SAMPLE Zssm1000_fm;  setenv FIRSTPU 150000
# setenv SAMPLE Zssm1500_fm;  setenv FIRSTPU 150000
  setenv SAMPLE Zssm3000_fm;  setenv FIRSTPU 175000
# setenv SAMPLE Zssm5000_fm;  setenv FIRSTPU 200000
# setenv SAMPLE Zpsi1000_fm;  setenv FIRSTPU 225000
# setenv SAMPLE Zpsi3000_fm;  setenv FIRSTPU 250000
# setenv SAMPLE Zpsi5000_fm;  setenv FIRSTPU 275000
# setenv SAMPLE Zeta1000_fm;  setenv FIRSTPU 300000
# setenv SAMPLE Zeta3000_fm;  setenv FIRSTPU 325000
# setenv SAMPLE Zeta5000_fm;  setenv FIRSTPU 350000
# setenv SAMPLE Zchi1000_fm;  setenv FIRSTPU 375000
# setenv SAMPLE Zchi3000_fm;  setenv FIRSTPU 400000
# setenv SAMPLE Zchi5000_fm;  setenv FIRSTPU 420000
# setenv SAMPLE Zlrm1000_fm;  setenv FIRSTPU  10000
# setenv SAMPLE Zlrm3000_fm;  setenv FIRSTPU  35000
# setenv SAMPLE Zlrm5000_fm;  setenv FIRSTPU  60000
# setenv SAMPLE Zalrm1000_fm; setenv FIRSTPU  85000
# setenv SAMPLE Zalrm3000_fm; setenv FIRSTPU 110000
# setenv SAMPLE Zalrm5000_fm; setenv FIRSTPU 135000

# setenv PU PU2x33
# setenv PU PU34

setenv SRCDIR /afs/cern.ch/user/t/tucker/scratch0/${CMSSW_VERS}
setenv OUTDIR /castor/cern.ch/user/t/tucker/${CMSSW_VERS}

setenv ROOTFILE ${SAMPLE}_GEN_SIM.root
setenv LOGFILE  ${SAMPLE}_GEN_SIM.out

echo '**************' $SAMPLE '**************'

rfmkdir -p ${OUTDIR}

cd ${SRCDIR}
eval `scramv1 runtime -csh`
cd ${WORKDIR}

if (${MODEL} == "Zpsi") then 
  setenv ZPCOUPLINGS '\
        # Couplings: first generation\
	"PARU(121)=  0.        ! vd",\
	"PARU(122)= -0.506809  ! ad",\
	"PARU(123)=  0.        ! vu",\
	"PARU(124)= -0.506809  ! au",\
	"PARU(125)=  0.        ! ve",\
	"PARU(126)= -0.506809  ! ae",\
	"PARU(127)= -0.253405  ! vnu",\
	"PARU(128)= -0.253405  ! anu",\
        # Couplings: second generation\
	"PARJ(180)=  0.        ! vd",\
	"PARJ(181)= -0.506809  ! ad",\
	"PARJ(182)=  0.        ! vu",\
	"PARJ(183)= -0.506809  ! au",\
	"PARJ(184)=  0.        ! ve",\
	"PARJ(185)= -0.506809  ! ae",\
	"PARJ(186)= -0.253405  ! vnu",\
	"PARJ(187)= -0.253405  ! anu",\
        # Couplings: third generation\
	"PARJ(188)=  0.        ! vd",\
	"PARJ(189)= -0.506809  ! ad",\
	"PARJ(190)=  0.        ! vu",\
	"PARJ(191)= -0.506809  ! au",\
	"PARJ(192)=  0.        ! ve",\
	"PARJ(193)= -0.506809  ! ae",\
	"PARJ(194)= -0.253405  ! vnu",\
	"PARJ(195)= -0.253405  ! anu",'
else
  setenv ZPCOUPLINGS ""
endif

echo '************** GEN-SIM **************'
cat >! Zp2mu_GEN_SIM.cfg <<EOF
# Configuration file for production of Z'-->mu+ mu-.
# Zprime2mu part is translation to CMSSW language of control cards used
# in PYTHIA and CMKIN since 2002; the rest is standard.
process Sim = {

  untracked PSet maxEvents = {untracked int32 input = ${NEVENTS}}

  # Initialize MessageLogger
  include "FWCore/MessageService/data/MessageLogger.cfi"

  # Initialize random number seeds
  include "Configuration/ReleaseValidation/data/Services.cff"
  #replace RandomNumberGeneratorService.sourceSeed = 12191982

  untracked PSet options = {
    include "FWCore/Framework/test/cmsExceptionsFatalOption.cff"
    untracked bool wantSummary = true
    untracked bool makeTriggerResults = true
  }

  # Event generation
  source = PythiaSource { 
    # to printout pythia event record (call pylist)
    untracked int32 pythiaPylistVerbosity = 0
    # to printout HepMC::GenEvent record (HepMC::GenEvent::print())
    untracked bool pythiaHepMCVerbosity = false
    untracked int32 maxEventsToPrint = 0
    
    PSet PythiaParameters = {
      # This is a vector of ParameterSet names to be read, in this order
      vstring parameterSets = {
	"pythiaUESettings",
	"Zprime2mu"
      }
      
      include "Configuration/Generator/data/PythiaUESettings.cfi"
      
      vstring Zprime2mu = {
	"MSEL = 21            ! generate Zprime according to ISUB=141",
        # Treatment of Z'/Z0/gamma interference
#	"MSTP(44) = 2         ! only Z0 included",
#	"MSTP(44) = 3         ! only Zprime included",
#	"MSTP(44) = 4         ! only Z0/gamma interference included",
	"MSTP(44) = 7         ! complete Zprime/Z/gamma interference",
        # Z' mass
	"PMAS(32,1) = 3000.0  ! PMAS(KC,1) is mass of particle KC",
        # Range of allowed M values
#	"CKIN(1) =   40.      ! lower mass limit",
#	"CKIN(1) =  200.      ! lower mass limit",
#	"CKIN(1) =  400.      ! ",
# 	"CKIN(1) =  600.      ! ",
#	"CKIN(1) = 1000.      ! ",
	"CKIN(1) = 1500.      ! ",
#	"CKIN(1) = 2000.      ! ",
#	"CKIN(1) = 3000.      ! ",
#	"CKIN(2) =  500.      ! upper mass limit",
	${ZPCOUPLINGS}
        # Decay modes
	"MDME(289,1) = 0      ! d + dbar",
	"MDME(290,1) = 0      ! u + ubar",
	"MDME(291,1) = 0      ! s + sbar",
	"MDME(292,1) = 0      ! c + cbar",
	"MDME(293,1) = 0      ! b + bbar",
	"MDME(294,1) = 0      ! t + tbar",
	"MDME(295,1) =-1      ! 4th generation q + qbar",
	"MDME(296,1) =-1      ! 4th generation q + qbar",
	"MDME(297,1) = 0      ! e-     + e+",
	"MDME(298,1) = 0      ! nu_e   + nu_ebar",
	"MDME(299,1) = 1      ! mu-    + mu+",
	"MDME(300,1) = 0      ! nu_mu  + nu_mubar",
	"MDME(301,1) = 0      ! tau-   + tau+",
	"MDME(302,1) = 0      ! nu_tau + nu_taubar",
	"MDME(303,1) =-1      ! 4th generation l- + l+",
	"MDME(304,1) =-1      ! 4th generation nu + nubar",
	"MDME(305,1) =-1      ! W+ + W-",
	"MDME(306,1) =-1      ! H+ + H-",
	"MDME(307,1) =-1      ! Z0 + gamma",
	"MDME(308,1) =-1      ! Z0 + h0",
	"MDME(309,1) =-1      ! h0 + A0",
	"MDME(310,1) =-1      ! H0 + A0"
      }
    }
  }
  
  # Simulation parameters
  include "Configuration/StandardSequences/data/Simulation.cff"
  include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"
  include "Configuration/StandardSequences/data/MixingNoPileUp.cff"

  # Produces genParticleCandidates from HepMC products
  include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
  include "PhysicsTools/HepMCCandAlgos/data/genParticleCandidates.cfi"
  
  # Produces the ~same output as PYLIST. Works on GenParticleCandidates.
  module printTree = ParticleListDrawer {
    untracked int32 maxEventsToPrint = 10
  }

  # Event output
  include "Configuration/EventContent/data/EventContent.cff"
  module GEN-SIM = PoolOutputModule {
#    untracked string fileName = "rfio:${OUTDIR}/${ROOTFILE}"
    untracked string fileName = "gensim.root"
    using FEVTSIMEventContent
    untracked PSet dataset = {
	untracked string dataTier = "GEN-SIM"
    }
  }

  path p = {psim, genParticleCandidates} #, printTree}
  #path p = {VtxSmeared, genParticleCandidates}
  
  endpath outpath = {GEN-SIM}
}
EOF
#cmsRun Zp2mu_GEN_SIM.cfg >& ${LOGFILE}
cmsRun Zp2mu_GEN_SIM.cfg
if ($? != 0) then
  echo ' CMSSW (Zp2mu_GEN_SIM) exited with error code'
  exit 1
endif
ls

if (${WRITE_TO_CASTOR} == true) then
  rfcp gensim.root ${OUTDIR}/${SAMPLE}_GEN_SIM.root
  rfdir ${OUTDIR}
endif

echo
echo  --------------------------
echo   $0 finished at `date`
echo  --------------------------
