#!/bin/tcsh
#BSUB -q 2nw
#BSUB -R "pool>5000"
##BSUB -J dy_above200_R
#BSUB -J Zssm3000_R
##BSUB -o /afs/cern.ch/user/t/tucker/scratch0/dy_above200_RECO_%J.lis
#BSUB -o /afs/cern.ch/user/t/tucker/scratch0/Zssm3000_fm_RECO_%J.lis

echo  --------------------------
echo $0 batch job started at `date`
echo   RECO for CMSSW 1_6_7
echo  --------------------------

setenv CMSSW_VERS CMSSW_1_6_7
setenv WRITE_TO_CASTOR true
setenv NEVENTS -1
#setenv WORKDIR `pwd`

# setenv SAMPLE dy_above200;  setenv FIRSTPU      0
# setenv SAMPLE dy_above400;  setenv FIRSTPU  25000
# setenv SAMPLE dy_above1000; setenv FIRSTPU  50000
# setenv SAMPLE dy_above1500; setenv FIRSTPU  75000
# setenv SAMPLE dy_above2000; setenv FIRSTPU 100000
# setenv SAMPLE dy_above3000; setenv FIRSTPU 125000

# setenv SAMPLE Zssm1000_fm;  setenv FIRSTPU 150000
 setenv SAMPLE Zssm3000_fm;  setenv FIRSTPU 175000
# setenv SAMPLE Zssm5000_fm;  setenv FIRSTPU 200000
# setenv SAMPLE Zpsi1000_fm;  setenv FIRSTPU 225000
# setenv SAMPLE Zpsi3000_fm;  setenv FIRSTPU 250000
# setenv SAMPLE Zpsi5000_fm;  setenv FIRSTPU 275000
# setenv SAMPLE Zeta1000_fm;  setenv FIRSTPU 300000
# setenv SAMPLE Zeta3000_fm;  setenv FIRSTPU 325000
# setenv SAMPLE Zeta5000_fm;  setenv FIRSTPU 350000
# setenv SAMPLE Zchi1000_fm;  setenv FIRSTPU 375000
# setenv SAMPLE Zchi3000_fm;  setenv FIRSTPU 400000
# setenv SAMPLE Zchi5000_fm;  setenv FIRSTPU 420000
# setenv SAMPLE Zlrm1000_fm;  setenv FIRSTPU  10000
# setenv SAMPLE Zlrm3000_fm;  setenv FIRSTPU  35000
# setenv SAMPLE Zlrm5000_fm;  setenv FIRSTPU  60000
# setenv SAMPLE Zalrm1000_fm; setenv FIRSTPU  85000
# setenv SAMPLE Zalrm3000_fm; setenv FIRSTPU 110000
# setenv SAMPLE Zalrm5000_fm; setenv FIRSTPU 135000

# setenv PU PU2x33
# setenv PU PU34

setenv SRCDIR /afs/cern.ch/user/t/tucker/private/${CMSSW_VERS}
setenv OUTDIR /castor/cern.ch/user/t/tucker/${CMSSW_VERS}

echo '**************' $SAMPLE '**************'

cd ${SRCDIR}
eval `scramv1 runtime -csh`
cd ${WORKDIR}

echo '************** DIGI-RECO **************'
cat > Zssm2mu_RECO.cfg <<EOF
process Rec1 = {
  untracked PSet maxEvents = {untracked int32 input = ${NEVENTS}}
  
  source = PoolSource {
    untracked vstring fileNames = {'rfio:${OUTDIR}/${SAMPLE}_HLT.root'}
#    untracked vstring fileNames = {'file:hlt.root'}
  }

  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  include "Configuration/ReleaseValidation/data/Services.cff"
  
  include "Configuration/StandardSequences/data/Reconstruction.cff"

  include "Configuration/StandardSequences/data/MixingNoPileUp.cff" 
  #include "Configuration/StandardSequences/data/MixingLowLumiPileUp.cff" 
  #include "Configuration/StandardSequences/data/MixingHighLumiPileUp.cff" 

  #include "Configuration/StandardSequences/data/FrontierConditions.cff" # ideal conditions
  #include "Configuration/StandardSequences/data/FrontierStartupConditions.cff"
  #include "Configuration/StandardSequences/data/Frontier10pbConditions.cff"
  include "Configuration/StandardSequences/data/Frontier100pbConditions.cff"
  #include "Configuration/StandardSequences/data/FakeConditions.cff"

  include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"
  #include "Configuration/StandardSequences/data/VtxSmearedNoSmear.cff"
  #include "Configuration/StandardSequences/data/VtxSmearedFlat.cff"
  #include "Configuration/StandardSequences/data/VtxSmearedBeamProfile.cff"
  
  # JMTBAD moved up from RecoMuon/MuonIdentification/data/globalMuons.cfi
  # !!!!!!!!!! must check out this file and remove these lines !!!!!!!!!!!
  #   so that when we do module muonsFMS below, cmsRun doesn't complain
  #   about replacing a parameter twice
  # isolation configuration
  replace muons.CaloExtractorPSet.TrackAssociatorParameters.useEcal = false 
  replace muons.CaloExtractorPSet.TrackAssociatorParameters.useHcal = false 
  replace muons.CaloExtractorPSet.TrackAssociatorParameters.useHO   = false 
  replace muons.CaloExtractorPSet.TrackAssociatorParameters.useCalo = true
  replace muons.CaloExtractorPSet.TrackAssociatorParameters.useMuon = false 
  replace muons.CaloExtractorPSet.TrackAssociatorParameters.dREcalPreselection = 1.0
  replace muons.CaloExtractorPSet.TrackAssociatorParameters.dRHcalPreselection = 1.0

  # Extra reconstructors for TeV muons.
  # https://twiki.cern.ch/twiki/bin/view/CMS/TeVMuons
  # don't need to redo tracker-only -- available from reco::Muon::track()
  # but, do it so that accessing them is easier
  module globalMuonsTK = globalMuons from "RecoMuon/GlobalMuonProducer/data/globalMuons.cfi"
  replace globalMuonsTK.GLBTrajBuilderParameters.MuonHitsOption = 0
  module globalMuonsFMS = globalMuons from "RecoMuon/GlobalMuonProducer/data/globalMuons.cfi"
  replace globalMuonsFMS.GLBTrajBuilderParameters.MuonHitsOption = 2
  module globalMuonsPMR = globalMuons from "RecoMuon/GlobalMuonProducer/data/globalMuons.cfi"
  replace globalMuonsPMR.GLBTrajBuilderParameters.MuonHitsOption = 3
  # there are still options 4, 5... see the wiki page

  module muonsTK = muons from "RecoMuon/MuonIdentification/data/globalMuons.cfi"
  replace muonsTK.inputMuonCollection = globalMuonsTK
  replace muonsTK.inputLinkCollection = globalMuonsTK
  module muonsFMS = muons from "RecoMuon/MuonIdentification/data/globalMuons.cfi"
  replace muonsFMS.inputMuonCollection = globalMuonsFMS
  replace muonsFMS.inputLinkCollection = globalMuonsFMS
  module muonsPMR = muons from "RecoMuon/MuonIdentification/data/globalMuons.cfi"
  replace muonsPMR.inputMuonCollection = globalMuonsPMR
  replace muonsPMR.inputLinkCollection = globalMuonsPMR
  
  sequence tevmuonreco = {globalMuonsTK, globalMuonsFMS, globalMuonsPMR, muonsTK, muonsFMS, muonsPMR}
  # photonreco is already done by the standard sequence
  #sequence photonreco = {ecalClusters, egammareco}
  #sequence reco = {localreco, ckftracks, tevmuonreco, photonreco}

  include "Configuration/EventContent/data/EventContent.cff"
  
  # Add extra muon reconstructors to FEVTSIM
  block ExtraMuonReco = {
    untracked vstring outputCommands = {
      "keep *_globalMuonsTK_*_*",
      "keep *_globalMuonsFMS_*_*",
      "keep *_globalMuonsPMR_*_*",
      "keep *_muonsTK_*_*",
      "keep *_muonsFMS_*_*",
      "keep *_muonsPMR_*_*"
    }
  }
  replace FEVTSIMEventContent.outputCommands += ExtraMuonReco.outputCommands
  
  module FEVT = PoolOutputModule {
    untracked string fileName = 'reco.root'
    using FEVTSIMEventContent
    #using RECOSIMEventContent
    #using AODSIMEventContent
    untracked PSet dataset = {
      untracked string dataTier = "GEN-SIM-DIGI-RAW-RECO"
    }
  }
  
  # drop all the INPUT stuff, BUT simulation
  #replace FEVT.outputCommands += "drop *_*_*_Rec"
  #replace FEVT.outputCommands += "drop *_*_*_GENSIM"
  #replace FEVT.outputCommands += SimG4CoreFEVT.outputCommands
  
  path p1 = {reconstruction, tevmuonreco}
  endpath outpath = {FEVT}
}
EOF
#cmsRun Zssm2mu_RECO.cfg >& ${LOGFILE}
cmsRun Zssm2mu_RECO.cfg

if ($? != 0) then
  echo ' CMSSW (Zssm2mu_RECO) exited with error code'
  exit 1
endif
ls

if (${WRITE_TO_CASTOR} == true) then
  rfcp reco.root ${OUTDIR}/${SAMPLE}_RECO.root
  rfdir ${OUTDIR}
endif

echo
echo  --------------------------
echo   $0 finished at `date`
echo  --------------------------
