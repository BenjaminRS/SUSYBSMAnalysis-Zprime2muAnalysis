####################################################################
## Produce/clone/copy/do whatever to the needed muon collections
####################################################################

module simParticleCandidates = GenCandsFromSimTracksProducer {
  InputTag src = g4SimHits
}

path simCands = { simParticleCandidates }

module genMuons = CandSelector {
  InputTag src = genParticleCandidates
  string cut = "abs(pdgId) = 13 & status = 1" # & pt > 0.001"
}

module simMuons = CandSelector {
  InputTag src = simParticleCandidates
  string cut = "abs(pdgId) = 13 & status = 1" # & pt > 0.001"
}

path makeMuonGenCandidates = { genMuons, simMuons }

module muCandGN = CandMerger {
  VInputTag src = { genMuons, simMuons }
}

# "Sanitize" the L1 muons, i.e. shift their phi values from the bin
# edge to the bin center (an offset of 0.0218 rad).
module muCandL1 = L1MuonSanitizer {
  InputTag src = l1extraParticles
}

# "Sanitize" the L3 muons, i.e. make up reco::Muons from
# reco::MuonTrackLinks (the hltL3MuonCandidates drop some of the extra
# track information, while the MuonTrackLinksCollection hltL3Muons
# appropriately has links to all 3 tracks)
module muCandL3 = L3MuonSanitizer {
  InputTag src = hltL3Muons
}

# Make tracker-only reco::Muons out of the tracker tracks in the muons
# collection.
module muCandTK = TrackerOnlyMuonProducer {
  InputTag src = muons
}

sequence makeMuonCandidates = { 
  genMuons, simMuons, muCandGN, muCandL1, muCandL3, muCandTK
}

####################################################################
## Same for the electrons
####################################################################

module genElectrons = CandSelector {
  InputTag src = genParticleCandidates
  string cut = "abs(pdgId) = 11 & status = 1" #& pt > 0.001"
}

module simElectrons = CandSelector {
  InputTag src = simParticleCandidates
  string cut = "abs(pdgId) = 11 & status = 1" #& pt > 0.001"
}

module elCandGN = CandMerger {
  VInputTag src = { genElectrons, simElectrons }
}

sequence makeElectronCandidates = {
  genElectrons, simElectrons, elCandGN 
}

####################################################################
## Make all the candidates defined in the sequences above
####################################################################

path makeCandidates = { makeMuonCandidates, makeElectronCandidates }

####################################################################
## Module configuration parameters
####################################################################

block Zprime2muAnalysisCommon = {
  ####################################################################
  ## Analysis configuration 
  ####################################################################
  bool doingElectrons = false
  bool doingHiggs = false
  bool constructGenDil = false
  bool generatedOnly = false
  bool doingGeant4 = true
  bool reconstructedOnly = false
  bool useOtherMuonRecos = true
  bool useTMRforBest = false
  bool usingAODOnly = false
  bool useTriggerInfo = true

  ####################################################################
  ## Input tags for particles/trigger paths
  ####################################################################
  InputTag genMuons = VtxSmeared # source
  InputTag l1ParticleMap = l1extraParticleMap
  # every process puts a TriggerResults product into the event;
  # pick the HLT one
  InputTag hltResults = TriggerResults::HLT
  # stand-alone muons are used as "seeds" to try to match the various
  # levels of global reconstruction
  InputTag standAloneMuons = standAloneMuons:UpdatedAtVtx
  # reconstructed photons to try to recover brem losses
  InputTag photons = correctedPhotons
 
  ####################################################################
  ## Input tags for leptons at the different rec levels (in order)
  ####################################################################
  VInputTag muInputs = {
    muCandGN,
    muCandL1, # l1extraParticles
    hltL2MuonCandidates,
    muCandL3, # hltL3MuonCandidates,
    muons,
    muCandTK, # muonsTK,
    muonsFMS,
    muonsPMR
  }

  # Zprime2muAnalysis knows to put pixelMatchGsfElectrons in the right
  # spot (i.e., in the same rec level as GMR muons).
  VInputTag elInputs = {
    elCandGN,
    pixelMatchGsfElectrons
  }
}

